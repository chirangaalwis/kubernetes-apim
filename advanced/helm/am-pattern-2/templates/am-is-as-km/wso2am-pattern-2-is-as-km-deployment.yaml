# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

  {{- if .Values.wso2.deployment.wso2is.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-2-is-as-km-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.deployment.wso2is.replicas }}
  minReadySeconds: {{ .Values.wso2.deployment.wso2is.minReadySeconds }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.wso2is.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.wso2is.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2am-pattern-2-is-as-km
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-2-is-as-km
    spec:
      initContainers:
      {{- if and .Values.wso2.deployment.db.hostname (.Values.wso2.deployment.db.port) }}
      - name: init-apim-db
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of DBMS service"; while ! nc -z {{ .Values.wso2.deployment.db.hostname }} {{ .Values.wso2.deployment.db.port }}; do sleep 1; printf "-"; done; echo -e "  >> DBMS service is available";']
      {{- end }}
      - name: init-apim-analytics
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of WSO2 API Manager Analytics Worker deployment"; while ! nc -z wso2am-pattern-2-am-analytics-worker-service 7712; do sleep 1; printf "-"; done; echo -e "  >> WSO2 API Manager Analytics Worker has started";']
      containers:
        - name: wso2am-pattern-2-is-as-km
          {{- if .Values.wso2.deployment.wso2is.dockerRegistry }}
          image: {{ .Values.wso2.deployment.wso2is.dockerRegistry }}/{{ .Values.wso2.deployment.wso2is.imageName }}
          {{- $tag := .Values.wso2.deployment.wso2is.imageTag }}
          {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
          {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
          image: wso2/{{ .Values.wso2.deployment.wso2is.imageName }}:{{ .Values.wso2.deployment.wso2is.imageTag }}
          {{- else }}
          image: docker.wso2.com/{{ .Values.wso2.deployment.wso2is.imageName }}:{{ .Values.wso2.deployment.wso2is.imageTag }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2is.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2is.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2is.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2is.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.wso2is.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.wso2is.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.wso2is.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.wso2is.resources.limits.cpu }}
          imagePullPolicy: {{ .Values.wso2.deployment.wso2is.imagePullPolicy }}
          command: ["/home/wso2carbon/entrypoint.sh"]
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: wso2am-pattern-2-is-as-km-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
            - name: wso2am-pattern-2-is-as-km-conf-axis2
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/axis2
            - name: wso2am-pattern-2-is-as-km-conf-datasources
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/datasources
            - name: wso2am-pattern-2-is-as-km-conf-entrypoint
              mountPath: /home/wso2carbon/entrypoint.sh
              subPath: docker-entrypoint.sh
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.wso2is.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.wso2is.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: wso2am-pattern-2-creds
      {{ end }}
      volumes:
        - name: wso2am-pattern-2-is-as-km-conf
          configMap:
            name: wso2am-pattern-2-is-as-km-conf
        - name: wso2am-pattern-2-is-as-km-conf-axis2
          configMap:
            name: wso2am-pattern-2-is-as-km-conf-axis2
        - name: wso2am-pattern-2-is-as-km-conf-datasources
          configMap:
            name: wso2am-pattern-2-is-as-km-conf-datasources
        - name: wso2am-pattern-2-is-as-km-conf-entrypoint
          configMap:
            name: wso2am-pattern-2-is-as-km-conf-entrypoint
            defaultMode: 0407

  {{- end }}
