# Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if (not .Values.wso2.deployment.defaultKeyManager) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-2-km-deployment
spec:
  replicas: {{ .Values.wso2.deployment.wso2am.km.replicas }}
  minReadySeconds: {{ .Values.wso2.deployment.wso2am.minReadySeconds }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.wso2am.km.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.wso2am.km.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2am-pattern-2-km
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-2-km
    spec:
      initContainers:
      - name: init-apim-db
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z wso2am-mysql-db-service 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      - name: init-apim-analytics
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of WSO2 API Manager Analytics Worker deployment"; while ! nc -z wso2am-pattern-2-am-analytics-worker-service 7712; do sleep 1; printf "-"; done; echo -e "  >> WSO2 API Manager Analytics Worker has started";']
      {{- if .Values.wso2.centralizedLogging.enabled }}
      - name: init-logstash-plugins-install
        image: docker.elastic.co/logstash/logstash:{{ .Values.wso2.centralizedLogging.logstash.imageTag }}
        command:
          - /bin/bash
          - "-c"
          - |
            set -e
            ./bin/logstash-plugin install logstash-codec-multiline logstash-filter-grok
        volumeMounts:
          - name: wso2am-pattern-2-shared-plugins-emptydir
            mountPath: /usr/share/logstash/plugins/
      - name: init-elasticsearch
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of Elasticsearch Server deployment"; while ! nc -z {{ .Values.wso2.centralizedLogging.logstash.elasticsearch.host }} {{ .Values.wso2.centralizedLogging.logstash.elasticsearch.port }}; do sleep 1; printf "-"; done; echo -e "  >> Elasticsearch server has started";']
      {{- end }}
      containers:
      - name: wso2am-pattern-2-km
        {{- if .Values.wso2.deployment.wso2am.dockerRegistry }}
        image: {{ .Values.wso2.deployment.wso2am.dockerRegistry }}/{{ .Values.wso2.deployment.wso2am.imageName }}
        {{- $tag := .Values.wso2.deployment.wso2am.imageTag }}
        {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
        {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
        image: wso2/{{ .Values.wso2.deployment.wso2am.imageName }}:{{ .Values.wso2.deployment.wso2am.imageTag }}
        {{- else }}
        image: docker.wso2.com/{{ .Values.wso2.deployment.wso2am.imageName }}:{{ .Values.wso2.deployment.wso2am.imageTag }}
        {{- end }}
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9443
          initialDelaySeconds: {{ .Values.wso2.deployment.wso2am.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.wso2am.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9443
          initialDelaySeconds: {{ .Values.wso2.deployment.wso2am.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.wso2am.readinessProbe.periodSeconds }}
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.wso2am.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.wso2am.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.wso2am.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.wso2am.resources.limits.cpu }}
        imagePullPolicy: {{ .Values.wso2.deployment.wso2am.imagePullPolicy }}
        securityContext:
          runAsUser: 802
        ports:
        -
          containerPort: 9763
          protocol: "TCP"
        -
          containerPort: 9443
          protocol: "TCP"
        volumeMounts:
        - name: wso2am-pattern-2-km-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
        - name: wso2am-pattern-2-km-conf-axis2
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/axis2
        - name: wso2am-pattern-2-km-conf-datasources
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/datasources
    {{- if .Values.wso2.centralizedLogging.enabled }}
        - name: wso2am-pattern-2-shared-logs-emptydir
          mountPath: /home/wso2carbon/wso2am-2.6.0/repository/logs/
    - name: wso2am-logstash
      image: docker.elastic.co/logstash/logstash:{{ .Values.wso2.centralizedLogging.logstash.imageTag }}
      livenessProbe:
        httpGet:
          path: /
          port: 9600
        initialDelaySeconds: {{ .Values.wso2.centralizedLogging.logstash.livenessProbe.initialDelaySeconds }}
        periodSeconds: {{ .Values.wso2.centralizedLogging.logstash.livenessProbe.periodSeconds }}
      readinessProbe:
        httpGet:
          path: /
          port: 9600
        initialDelaySeconds: {{ .Values.wso2.centralizedLogging.logstash.readinessProbe.initialDelaySeconds }}
        periodSeconds: {{ .Values.wso2.centralizedLogging.logstash.readinessProbe.periodSeconds }}
      volumeMounts:
        - name: wso2am-pattern-2-shared-logs-emptydir
          mountPath: /usr/share/logstash/wso2-logs/
        - name: wso2am-pattern-2-logstash-yml-conf
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: wso2am-pattern-2-c4-logstash-conf
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
        - name: wso2am-pattern-2-shared-plugins-emptydir
          mountPath: /usr/share/logstash/plugins/
      env:
        - name: NODE_ID
          value: {{ .Values.wso2.centralizedLogging.logstash.indexNodeID.wso2AMNode1 }}
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ELASTICSEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: wso2am-pattern-2-logstash-elasticsearch-creds
              key: username
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wso2am-pattern-2-logstash-elasticsearch-creds
              key: password
        - name: ELASTICSEARCH_HOST
          value: {{ .Values.wso2.centralizedLogging.logstash.elasticsearch.host }}
    {{- end }}
      serviceAccountName: {{ .Values.kubernetes.svcaccount }}
      {{- if .Values.wso2.deployment.wso2am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.wso2am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: wso2am-pattern-2-creds
      {{ end }}
      volumes:
      - name: wso2am-pattern-2-km-conf
        configMap:
          name: wso2am-pattern-2-km-conf
      - name: wso2am-pattern-2-km-conf-axis2
        configMap:
          name: wso2am-pattern-2-km-conf-axis2
      - name: wso2am-pattern-2-km-conf-datasources
        configMap:
          name: wso2am-pattern-2-km-conf-datasources
    {{- if .Values.wso2.centralizedLogging.enabled }}
      - name: wso2am-pattern-2-shared-logs-emptydir
        emptyDir: {}
      - name: wso2am-pattern-2-logstash-yml-conf
        configMap:
          name: wso2am-pattern-2-logstash-yml-conf
      - name: wso2am-pattern-2-c4-logstash-conf
        configMap:
          name: wso2am-pattern-2-c4-logstash-conf
      - name: wso2am-pattern-2-shared-plugins-emptydir
        emptyDir: {}
      - name: wso2am-pattern-2-logstash-elasticsearch-creds
        secret:
          secretName: wso2am-pattern-2-logstash-elasticsearch-creds
    {{- end }}

{{ end }}
