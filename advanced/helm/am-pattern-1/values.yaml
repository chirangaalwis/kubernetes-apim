# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:
  # MySQL datasource configurations
  #   enabled:          The configuration should be set to be 'true' if a MySQL database should be spawned as a pod within the cluster
  #   host:             Hostname of the MySQL database
  #   port:             Port of the MySQL database server
  #   username:         MySQL database username
  #   password:         MySQL database password
  #   driverClass:      JDBC Driver class name
  #   validationQuery:  SQL validation query
  mysql:
    enabled: true
    host: wso2am-mysql-db-service
    port: "3306"
    username: wso2carbon
    password: wso2carbon
    driverClass: com.mysql.jdbc.Driver
    validationQuery: "SELECT 1"
  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""
  deployment:
    persistentRuntimeArtifacts:
      # Persistent storage provider expected to be used for sharing persistent runtime artifacts
      # This can be one of the following.
      #   1. internal-nfs - Using the NFS dynamic provisioner for Kubernetes
      #   2. external-nfs - Using an externally configured NFS server
      #   3. Azure - Using Azure Files
      cloudProvider: "internal-nfs"
      # External NFS Server IP
      nfsServerIP: ""
      # Exported location on external NFS Server to be mounted at <APIM_HOME>/repository/deployment/server/synapse-configs
      sharedAPIMSynapseConfigsPath: ""
      # Exported location on external NFS Server to be mounted at <APIM_HOME>/repository/deployment/server/executionplans
      sharedAPIMExecutionPlansPath: ""
    wso2am:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      # dockerRegistry: ""
      imageName: "wso2am"
      imageTag: "2.6.0"
      # Number of deployment replicas
      replicas: 1
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 75
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 250
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 250
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 API Management product profiles
        # as per official documentation (https://docs.wso2.com/display/AM260/Installation+Prerequisites).
        requests:
          memory: "2Gi"
          cpu: "2000m"
        limits:
          memory: "3Gi"
          cpu: "3000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always
    wso2amAnalyticsWorker:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      # dockerRegistry: ""
      imageName: "wso2am-analytics-worker"
      imageTag: "2.6.0"
      # Number of deployment replicas
      replicas: 1
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 75
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 100
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 100
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 Stream Processor based server profiles
        # as per official documentation (https://docs.wso2.com/display/SP440/Installation+Prerequisites).
        requests:
          memory: "4Gi"
          cpu: "2000m"
        # Please see the official documentation on WSO2 Stream Processor based Performance Analysis and Resource recommendations
        # (https://docs.wso2.com/display/SP440/Performance+Analysis+Results) and tune the limits according to your needs
        # where necessary.
        limits:
          memory: "4Gi"
          cpu: "2000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always
  # Configurations for the Logstash container image and Elasticsearch authorization credentials
  # Centralized logging is disabled by default. If it is required to enable centralized logging, please follow the instructions
  # provided in the documentation (https://github.com/wso2/kubernetes-apim/tree/master/advanced/helm/am-pattern-1#enabling-centralized-logging).
  centralizedLogging:
    enabled: false
    logstash:
      imageTag: 7.2.0
      elasticsearch:
        host: "wso2-elasticsearch-master:9200"
        username: "elastic"
        password: "changeme"
      indexNodeID:
        wso2AMNode1: "wso2am-node-1"
        wso2AMNode2: "wso2am-node-2"
        wso2AMAnalyticsWorkerNode: "wso2am-analytics-worker-node"
      readinessProbe:
        initialDelaySeconds: 20
        periodSeconds: 30
      livenessProbe:
        initialDelaySeconds: 20
        periodSeconds: 30

tags:
  # Enable NFS dynamic provisioner for Kubernetes
  internal-nfs: true

kubernetes:
  # Name of Kubernetes service account
  svcaccount: "wso2am-pattern-1-svc-account"
